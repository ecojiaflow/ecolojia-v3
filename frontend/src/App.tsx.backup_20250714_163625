// src/App.tsx - VERSION COMPATIBLE AVEC STRUCTURE EXISTANTE + MULTI-CAT√âGORIES
import React, { Suspense, lazy } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';
import { Leaf } from 'lucide-react';

// Lazy loading pour √©viter les d√©pendances circulaires
const HomePage = lazy(() => import('./pages/HomePage'));
const ProductPage = lazy(() => import('./pages/ProductPage'));
const MultiCategoriesPage = lazy(() => import('./pages/MultiCategoriesPage'));

const LoadingSpinner = () => (
  <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-50">
    <div className="text-center">
      <div className="w-16 h-16 border-4 border-green-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
      <p className="text-gray-600 font-medium">Chargement ECOLOJIA...</p>
    </div>
  </div>
);

// Composant de navigation minimaliste qui s'adapte aux pages existantes
const Navigation: React.FC = () => {
  const location = useLocation();

  // Ne pas afficher la navigation sur la page d'accueil (HomePage a sa propre navigation)
  if (location.pathname === '/') return null;

  const navItems = [
    { path: '/', label: 'üè† Accueil', description: 'Recherche et d√©couverte de produits' },
    { path: '/multi-categories', label: 'üå± Multi-Cat√©gories', description: 'Tests d\'analyse par cat√©gorie' }
  ];

  return (
    <nav className="bg-white shadow-md border-b border-gray-100 sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          {/* Logo ECOLOJIA */}
          <Link 
            to="/" 
            className="flex items-center space-x-3 text-xl font-bold text-eco-leaf hover:text-eco-leaf/80 transition-colors"
          >
            <Leaf className="h-8 w-8" />
            <span>ECOLOJIA</span>
          </Link>

          {/* Navigation items - Desktop */}
          <div className="hidden md:flex items-center space-x-2">
            {navItems.map((item) => (
              <Link
                key={item.path}
                to={item.path}
                className={`px-4 py-2 rounded-xl font-medium transition-all duration-200 ${
                  location.pathname === item.path
                    ? 'bg-eco-leaf/10 text-eco-leaf shadow-sm'
                    : 'text-gray-600 hover:bg-gray-50 hover:text-gray-800'
                }`}
                title={item.description}
              >
                {item.label}
              </Link>
            ))}
          </div>

          {/* Mobile menu */}
          <div className="md:hidden">
            <Link 
              to={location.pathname === '/multi-categories' ? '/' : '/multi-categories'}
              className="flex items-center justify-center w-10 h-10 rounded-xl bg-eco-leaf/10 text-eco-leaf hover:bg-eco-leaf/20 transition-colors"
              title="Basculer entre les pages"
            >
              {location.pathname === '/multi-categories' ? 'üè†' : 'üå±'}
            </Link>
          </div>
        </div>

        {/* Mobile navigation - Collapsible */}
        <div className="md:hidden border-t border-gray-100 py-3">
          <div className="flex justify-center space-x-4">
            {navItems.map((item) => (
              <Link
                key={item.path}
                to={item.path}
                className={`px-4 py-2 rounded-xl text-sm font-medium transition-all ${
                  location.pathname === item.path
                    ? 'bg-eco-leaf text-white'
                    : 'text-gray-600 hover:bg-gray-50'
                }`}
              >
                {item.label}
              </Link>
            ))}
          </div>
        </div>
      </div>
    </nav>
  );
};

const NotFound: React.FC = () => (
  <div className="min-h-screen flex items-center justify-center text-center p-6 bg-gradient-to-br from-red-50 to-orange-50">
    <div className="max-w-md mx-auto">
      <div className="text-6xl mb-6">üîç</div>
      <h1 className="text-3xl font-bold mb-4 text-gray-800">Page Introuvable</h1>
      <p className="text-gray-600 mb-6">
        La page que vous recherchez n'existe pas ou a √©t√© d√©plac√©e.
      </p>
      <div className="space-y-3">
        <Link 
          to="/" 
          className="block bg-eco-leaf hover:bg-eco-leaf/90 text-white font-medium py-3 px-6 rounded-xl transition-colors"
        >
          üè† Retour √† l'accueil
        </Link>
        <Link 
          to="/multi-categories" 
          className="block text-eco-leaf hover:text-eco-leaf/80 font-medium py-2 transition-colors"
        >
          üå± D√©couvrir les analyses multi-cat√©gories
        </Link>
      </div>
    </div>
  </div>
);

function App() {
  return (
    <Router>
      <div className="App min-h-screen bg-white">
        <Navigation />
        <Suspense fallback={<LoadingSpinner />}>
          <Routes>
            {/* Route principale - HomePage existante */}
            <Route path="/" element={<HomePage />} />
            
            {/* Routes produits existantes */}
            <Route path="/product/:slug" element={<ProductPage />} />
            
            {/* Nouvelle route multi-cat√©gories */}
            <Route path="/multi-categories" element={<MultiCategoriesPage />} />
            
            {/* Redirects de compatibilit√© */}
            <Route path="/produit/:slug" element={<Navigate to="/product/:slug" replace />} />
            <Route path="/product" element={<Navigate to="/" replace />} />
            <Route path="/scan" element={<Navigate to="/" replace />} />
            <Route path="/analyze" element={<Navigate to="/" replace />} />
            
            {/* 404 */}
            <Route path="*" element={<NotFound />} />
          </Routes>
        </Suspense>
      </div>
    </Router>
  );
}

// Export explicite pour √©viter tout probl√®me
export default App;